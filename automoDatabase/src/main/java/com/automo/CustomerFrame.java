/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.automo;

import com.automo.entity.Customer;
import com.automo.entity.Vehicle;
import java.awt.Component;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author ultrasaur
 */
public class CustomerFrame extends javax.swing.JFrame {

    private static final Logger LOG = LogManager.getLogger(CustomerFrame.class);
    /**
     * Creates new form CustomerVehiclePanel
     */
    public CustomerFrame() {
        vehicleListModel = new DefaultListModel<>();
        vehicleListCellRenderer = new VehicleListCellRenderer();
        initComponents();
        pack();
        addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowClosing(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowClosed(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowIconified(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowActivated(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        singleCustomerPanel1 = new com.automo.SingleCustomerPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehicleList = new javax.swing.JList<>();
        singleVehiclePanel1 = new com.automo.SingleVehiclePanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        getContentPane().add(singleCustomerPanel1, gridBagConstraints);

        vehicleList.setModel(vehicleListModel);
        vehicleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vehicleList.setToolTipText("");
        vehicleList.setCellRenderer(vehicleListCellRenderer);
        vehicleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                vehicleListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(vehicleList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        getContentPane().add(singleVehiclePanel1, gridBagConstraints);

        jLabel2.setText("Vehicles");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vehicleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_vehicleListValueChanged
        singleVehiclePanel1.setEntity(vehicleListModel.get(evt.getFirstIndex()));
    }//GEN-LAST:event_vehicleListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerFrame().setVisible(true);
            }
        });
    }

    public void setCustomer(Customer c){
        singleCustomerPanel1.setEntity(c);
        for (Vehicle v : c.getVehicleCollection()){
            vehicleListModel.addElement(v);
        }
        try {
            vehicleList.setSelectedIndex(vehicleListModel.indexOf(c.getPrimaryVehicleId()));
        } catch (Exception e) {
            try {
                vehicleList.setSelectedIndex(0);
            } catch (Exception e2) {
            }
        }
    }
    
    private class VehicleListCellRenderer implements ListCellRenderer<Vehicle>{

        private final DefaultListCellRenderer ren = new DefaultListCellRenderer();
        
        @Override
        public Component getListCellRendererComponent(JList<? extends Vehicle> list, Vehicle value, int index, boolean isSelected, boolean cellHasFocus) {
            Component component = ren.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (component instanceof JLabel){
                JLabel label = (JLabel) component;
                label.setText(String.format("%s\t %s\t %s", value.getPlate(), value.getMake(), value.getModel()));
            }
            return component;
        }
        
    }

    
    private DefaultListModel<Vehicle> vehicleListModel;
    private ListCellRenderer<Vehicle> vehicleListCellRenderer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.automo.SingleCustomerPanel singleCustomerPanel1;
    private com.automo.SingleVehiclePanel singleVehiclePanel1;
    private javax.swing.JList<Vehicle> vehicleList;
    // End of variables declaration//GEN-END:variables
}
